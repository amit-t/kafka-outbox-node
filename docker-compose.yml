version: '3.8'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.0
    container_name: kon-zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    volumes:
      - zookeeper-data:/var/lib/zookeeper/data
      - zookeeper-logs:/var/lib/zookeeper/log
  
  kon-kafka:
    image: confluentinc/cp-kafka:7.3.0
    container_name: kon-kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: kon-zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kon-kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_DELETE_TOPIC_ENABLE: "true"
    volumes:
      - kafka-data:/var/lib/kafka/data

  postgres:
    image: postgres:15-alpine
    container_name: kon-postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: outbox
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      # Initialize database with outbox table schema
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql

  kon-kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kon-kafka-ui
    depends_on:
      - kon-kafka
    ports:
      - "8080:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kon-kafka:9092
      KAFKA_CLUSTERS_0_ZOOKEEPER: kon-zookeeper:2181

volumes:
  zookeeper-data:
  zookeeper-logs:
  kafka-data:
  postgres-data:
